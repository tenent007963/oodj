/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apu.y2s1.pms.lecturer;
import java.util.ArrayList;
import java.util.List;

import apu.y2s1.pms.DataAbstract;

/**
 *
 * @author tenen
 */
public class MarkingWindow extends javax.swing.JFrame {
    Lecturer thisLec = Lecturer.getInstance();
    int current_marker = 0;

    /**
     * Creates new form MarkingWindow
     */
    public MarkingWindow() {
        javax.swing.JOptionPane.showMessageDialog(null,"Direct initializing is not allowed. Please check your parameter and try again.");
    }

    public MarkingWindow(String step){
        initComponents();
        switch(step){
            case "1":
                MarkingStageLabel.setText("First Marking");
                current_marker = 4;
                break;
            case "2":
                MarkingStageLabel.setText("Second Marking");
                current_marker = 5;
                break;
            default:
                MarkingStageLabel.setText("Error");
                break;
        }

        getSubmissionID();
    }

    public void getSubmissionID(){
        DataAbstract db_assessments = new DataAbstract("Assessments.txt");
        DataAbstract db_submissions = new DataAbstract("Submissions.txt");
        List<String[]> db_assessments_list = db_assessments.getAllRows();
        List<String[]> db_submissions_list = db_submissions.getAllRows();
        String[] db_assessments_row;
        for (int i = 0; i < db_assessments_list.size(); i++)
        {
            db_assessments_row = db_assessments_list.get(i);
            // check if the lecturer is the marker
            if (db_assessments_row[current_marker].toLowerCase().equals(thisLec.getFullName().toLowerCase()))
            {
                // update the assessment id
                String assessment_id = db_assessments_row[0];

                boolean found = false;
                // get the matching submission id 
                for (int j = 0; j < db_assessments_list.size(); j++)
                {
                    if (j >= db_submissions_list.size()){
                        break;
                    }
                    String[] db_submissions_row = db_submissions_list.get(j);
                    if (db_submissions_row[2].equals(assessment_id))
                    {
                        subID.setText(db_submissions_row[0]);
                        jTextArea1.setText(db_submissions_row[9]);
                        marking.setText(db_submissions_row[7]);

                        found = true;
                        prevBtn.setEnabled(false);
                        this.setVisible(found);
                        return;
                    }
                }
                if (!found)
                {
                    javax.swing.JOptionPane.showMessageDialog(null,"No submission found for marking.");
                    this.dispose();
                }   
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        MarkingStageLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cfmButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        subID = new javax.swing.JLabel();
        prevBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        marking = new javax.swing.JTextField();
        Close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 642));
        setSize(new java.awt.Dimension(1024, 642));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel1.setText("Marking Window:");

        MarkingStageLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MarkingStageLabel.setText("<placeholder>");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel2.setText("Comments:");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel3.setText("Grading Mark:");

        cfmButton.setText("Confirm");
        cfmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cfmButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel4.setText("Current Submission ID:");

        subID.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        subID.setText("<subID>");

        prevBtn.setText("Prev Submission");
        prevBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevBtnActionPerformed(evt);
            }
        });

        nextBtn.setText("Next Submission");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        marking.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        marking.setToolTipText("Set grading mark here");

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subID, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(prevBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cfmButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nextBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(marking, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(307, 307, 307)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MarkingStageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(MarkingStageLabel))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(cfmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(prevBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marking, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cfmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cfmButtonActionPerformed
        // TODO add your handling code here:
        // overwrite the current comment, mark to the submission.txt 
        DataAbstract db_submissions = new DataAbstract("Submissions.txt");
        List<String[]> db_submissions_list = db_submissions.getAllRows();
        String[] db_submissions_row;
        for (int i = 0; i < db_submissions_list.size(); i++)
        {
            db_submissions_row = db_submissions_list.get(i);
            if (db_submissions_row[0].equals(subID.getText()))
            {
                db_submissions_row[7] = marking.getText();
                db_submissions_row[8] = jTextArea1.getText();
                db_submissions.updateRow(i, db_submissions_row);
                return;
            }
        }
    }//GEN-LAST:event_cfmButtonActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        // get the next submission id based on the current lecturer name and update the comment, mark and submission id
        DataAbstract db_assessments = new DataAbstract("Assessments.txt");
        DataAbstract db_submissions = new DataAbstract("Submissions.txt");
        List<String[]> db_assessments_list = db_assessments.getAllRows();
        List<String[]> db_submissions_list = db_submissions.getAllRows();
        String[] db_assessments_row;
        String[] db_submissions_row;

        // store the assessment ids that the lecturer is the first marker
        // use array list to store the assessment ids
        ArrayList<String> assessment_ids = new ArrayList<String>();
        prevBtn.setEnabled(true);
        for (int i = 0; i < db_assessments_list.size(); i++)
        {
            db_assessments_row = db_assessments_list.get(i);
            // check if the lecturer is the first marker
            if (db_assessments_row[current_marker].toLowerCase().equals(thisLec.getFullName().toLowerCase()))
            {
                // update the assessment id to the array list
                assessment_ids.add(db_assessments_row[0]);
            }   
        } 
        
        // store the relevant db_submission row in a array list
        ArrayList<String[]> db_submission_rows = new ArrayList<String[]>();
        for (int i = 0; i < db_submissions_list.size(); i++)
        {
            db_submissions_row = db_submissions_list.get(i);
            for (String assessment_id : assessment_ids)
            {
                if (db_submissions_row[2].equals(assessment_id))
                {
                    db_submission_rows.add(db_submissions_row);
                }
            }
        }

        // loop through the submission ids to get the next submission id
        // update the submission id, comment and mark
        for (int row_index = 0; row_index < db_submission_rows.size(); row_index++)
        {
            if (db_submission_rows.get(row_index)[0].equals(subID.getText()))
            {
                subID.setText(db_submission_rows.get(row_index + 1)[0]);
                jTextArea1.setText(db_submission_rows.get(row_index + 1)[9]);
                marking.setText(db_submission_rows.get(row_index + 1)[7]);
                // disable the next button if the current submission id is the last one
                if (row_index + 1 == db_submission_rows.size() - 1)
                {
                    nextBtn.setEnabled(false);
                }
                return;
            }
        }
    }//GEN-LAST:event_nextBtnActionPerformed

    private void prevBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevBtnActionPerformed
        DataAbstract db_assessments = new DataAbstract("Assessments.txt");
        DataAbstract db_submissions = new DataAbstract("Submissions.txt");
        List<String[]> db_assessments_list = db_assessments.getAllRows();
        List<String[]> db_submissions_list = db_submissions.getAllRows();
        String[] db_assessments_row;
        String[] db_submissions_row;

        // store the assessment ids that the lecturer is the first marker
        // use array list to store the assessment ids
        ArrayList<String> assessment_ids = new ArrayList<String>();
        nextBtn.setEnabled(true);
        for (int i = 0; i < db_assessments_list.size(); i++)
        {
            db_assessments_row = db_assessments_list.get(i);
            // check if the lecturer is the first marker
            if (db_assessments_row[current_marker].toLowerCase().equals(thisLec.getFullName().toLowerCase()))
            {
                // update the assessment id to the array list
                assessment_ids.add(db_assessments_row[0]);
            }
        }

        // store the relevant db_submission row in a array list
        ArrayList<String[]> db_submission_rows = new ArrayList<String[]>();
        for (int i = 0; i < db_submissions_list.size(); i++)
        {
            db_submissions_row = db_submissions_list.get(i);
            for (String assessment_id : assessment_ids)
            {
                if (db_submissions_row[2].equals(assessment_id))
                {
                    db_submission_rows.add(db_submissions_row);
                }
            }
        }

        // loop through the submission ids to get the next submission id
        // update the submission id, comment and mark
        for (int row_index = 0; row_index < db_submission_rows.size(); row_index++)
        {
            if (db_submission_rows.get(row_index)[0].equals(subID.getText()))
            {
                subID.setText(db_submission_rows.get(row_index - 1)[0]);
                jTextArea1.setText(db_submission_rows.get(row_index - 1)[9]);
                marking.setText(db_submission_rows.get(row_index - 1)[7]);
                // disable the next button if the current submission id is the last one
                if (row_index - 1 == 0)
                {
                    prevBtn.setEnabled(false);
                }
                return;
            }
        }
    }//GEN-LAST:event_prevBtnActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_CloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarkingWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarkingWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarkingWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarkingWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarkingWindow().setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Close;
    private javax.swing.JLabel MarkingStageLabel;
    private javax.swing.JButton cfmButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField marking;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton prevBtn;
    private javax.swing.JLabel subID;
    // End of variables declaration//GEN-END:variables
}
