/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apu.y2s1.pms.lecturer;

import java.util.ArrayList;
import java.util.List;

import javax.swing.table.DefaultTableModel;

import apu.y2s1.pms.DataAbstract;

/**
 *
 * @author tenen
 */
public class ReqConfirmWindow extends javax.swing.JFrame {

    /**
     * Creates new form ReqConfirmWindow
     */
    public ReqConfirmWindow() {
        initComponents();
        load_table();
    }

    public void load_table() {
        DataAbstract db = new DataAbstract("Submissions.txt");
        List<String[]> db_list = db.getAllRows();

        // Specify the column indices you want to retrieve (e.g., 0, 1, 2, 3)
        int[] desiredColumns = {0, 1, 3, 5};

        // Create a new list to store the desired columns
        List<String[]> desiredData = new ArrayList<>();

        // Iterate over each row in db_list and extract the desired columns
        for (String[] row : db_list) {
            String[] desiredRow = new String[desiredColumns.length];
            for (int i = 0; i < desiredColumns.length; i++) {
                desiredRow[i] = row[desiredColumns[i]];
            }
            desiredData.add(desiredRow);
        }

        // Populate jTable1 with the desired data
        String[] columnNames = {"Submission ID", "Student TP", "Submission Timestamp", "Approval Status"};
        DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);
        for (String[] row : desiredData) {
            tableModel.addRow(row);
        }
        jTable1.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cfmBtn = new javax.swing.JButton();
        rejBtn = new javax.swing.JButton();
        Close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 642));
        setSize(new java.awt.Dimension(1024, 642));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel1.setText("Confirm Presentation Request");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Submission ID", "Student TP", "Submission Timestamp", "Approval Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        cfmBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cfmBtn.setText("Confirm");
        cfmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cfmBtnActionPerformed(evt);
            }
        });

        rejBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        rejBtn.setText("Reject");
        rejBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejBtnActionPerformed(evt);
            }
        });

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cfmBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addComponent(rejBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(cfmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(rejBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46)
                .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        this.dispose();
    }    
    
    private void cfmBtnActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // get the selected row
        int row = jTable1.getSelectedRow();
        System.out.println(row);
        
        // check if a row is selected
        if (row != -1) {
            // if the approval status is already rejected, do nothing
            if (jTable1.getValueAt(row, 3).equals("Accepted")) {
                return;
            }
            // set the approval status to accepted
            jTable1.setValueAt("Accepted", row, 3);
            // update the database
            DataAbstract db = new DataAbstract("Submissions.txt");
            String[] data = db.getRow(row+1);
            for (String item: data) {
                System.out.println(item);
            }
            data[5] = "Accepted";  // assuming the approval status is at index 5
            db.updateRow(row, data);
            load_table();
        }
    }    

    private void rejBtnActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // get the selected row
        int row = jTable1.getSelectedRow();
        System.out.println(row);
        
        // check if a row is selected
        if (row != -1) {
            // if the approval status is already rejected, do nothing
            if (jTable1.getValueAt(row, 3).equals("Rejected")) {
                return;
            }
            // set the approval status to rejected
            jTable1.setValueAt("Rejected", row, 3);
            // update the database
            DataAbstract db = new DataAbstract("Submissions.txt");
            String[] data = db.getRow(row+1);
            for (String item: data) {
                System.out.println(item);
            }
            data[5] = "Rejected";  // assuming the approval status is at index 5
            db.updateRow(row, data);
            load_table();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReqConfirmWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReqConfirmWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReqConfirmWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReqConfirmWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fcfmBtn      /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReqConfirmWindow().setVisible(true);
            }
        });


    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Close;
    private javax.swing.JButton cfmBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton rejBtn;
    // End of variables declaration      
    
    
}
