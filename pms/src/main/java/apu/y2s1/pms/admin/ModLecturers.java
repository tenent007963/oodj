/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package apu.y2s1.pms.admin;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import apu.y2s1.pms.DataAbstract;
import java.util.List;


/**
 *
 * @author Thinkpad
 */
public class ModLecturers extends javax.swing.JFrame {
    DataAbstract fDB = new DataAbstract("Lecturers.txt");

    /**
     * Creates new form ModLecturers
     */
    public ModLecturers() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HomeBtn = new javax.swing.JButton();
        ID = new javax.swing.JTextField();
        Title = new javax.swing.JLabel();
        TopBG = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Password = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        AddBtn = new javax.swing.JButton();
        EditBtn = new javax.swing.JButton();
        DelBtn = new javax.swing.JButton();
        SearchTxt = new javax.swing.JTextField();
        SearchBtn = new javax.swing.JButton();
        SelectFile = new javax.swing.JButton();
        ResetBtn = new javax.swing.JButton();
        RefBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        LecturerTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        AddFileBtn = new javax.swing.JButton();
        SelFilePath = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        PMRole = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HomeBtn.setBackground(new java.awt.Color(153, 204, 255));
        HomeBtn.setFont(new java.awt.Font("Georgia", 2, 14)); // NOI18N
        HomeBtn.setText("HOME");
        HomeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeBtnMouseClicked(evt);
            }
        });
        getContentPane().add(HomeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 40));
        getContentPane().add(ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, 99, -1));

        Title.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        Title.setText("MODIFY LECTURERS");
        Title.setToolTipText("");
        getContentPane().add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, -1, 40));

        TopBG.setBackground(new java.awt.Color(153, 204, 255));
        TopBG.setForeground(new java.awt.Color(153, 204, 255));
        getContentPane().add(TopBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 40));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        jLabel1.setText("Lecturer ID Number:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        jLabel2.setText("Lecturer Name:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, -1, -1));
        getContentPane().add(Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 120, -1));

        jLabel7.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        jLabel7.setText("Lecturer Email:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, -1, -1));
        getContentPane().add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 120, -1));

        jLabel3.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        jLabel3.setText("Lecturer Password:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, -1, -1));
        getContentPane().add(Password, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 99, -1));

        jLabel4.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        jLabel4.setText("Lecturer Role:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 250, -1, -1));

        AddBtn.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        AddBtn.setText("Add");
        AddBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddBtnMouseClicked(evt);
            }
        });
        getContentPane().add(AddBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 60, -1));

        EditBtn.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        EditBtn.setText("Edit");
        EditBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditBtnMouseClicked(evt);
            }
        });
        getContentPane().add(EditBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 80, -1));

        DelBtn.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        DelBtn.setText("Delete");
        DelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DelBtnMouseClicked(evt);
            }
        });
        getContentPane().add(DelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, -1, -1));

        SearchTxt.setText("T000");
        getContentPane().add(SearchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 340, 80, 30));

        SearchBtn.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        SearchBtn.setText("Search");
        SearchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchBtnMouseClicked(evt);
            }
        });
        getContentPane().add(SearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 80, -1));

        SelectFile.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        SelectFile.setText("Select File");
        SelectFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectFileMouseClicked(evt);
            }
        });
        getContentPane().add(SelectFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 180, -1, -1));

        ResetBtn.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        ResetBtn.setText("Reset");
        ResetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResetBtnMouseClicked(evt);
            }
        });
        getContentPane().add(ResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 340, -1, -1));

        RefBtn.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        RefBtn.setText("Refresh");
        RefBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RefBtnMouseClicked(evt);
            }
        });
        getContentPane().add(RefBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 370, -1, -1));

        LecturerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Number", "Name", "Password", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        LecturerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LecturerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(LecturerTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, 870, 150));

        jLabel6.setFont(new java.awt.Font("Franklin Gothic Medium", 2, 18)); // NOI18N
        jLabel6.setText("Individual New Lecturer:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, -1, -1));

        AddFileBtn.setFont(new java.awt.Font("Segoe Print", 2, 12)); // NOI18N
        AddFileBtn.setText("Add File");
        AddFileBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddFileBtnMouseClicked(evt);
            }
        });
        getContentPane().add(AddFileBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 180, -1, -1));
        getContentPane().add(SelFilePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, 269, -1));

        jLabel8.setFont(new java.awt.Font("Franklin Gothic Medium", 2, 18)); // NOI18N
        jLabel8.setText("Lecturers List Text File:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 80, -1, -1));

        PMRole.setText("Project Manager");
        getContentPane().add(PMRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/apu/y2s1/pms/admin/Img/AdminFnBG.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1030, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBtnMouseClicked
        apu.y2s1.pms.admin.AdminMenu add = new apu.y2s1.pms.admin.AdminMenu();
        add.setVisible(true);
        dispose();
    }//GEN-LAST:event_HomeBtnMouseClicked

    private void AddBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBtnMouseClicked
        String id = ID.getText();
        String name = Name.getText();
        String pass = String.valueOf(Password.getPassword());
        String email = Email.getText();
        boolean roleval = PMRole.isSelected();

        if (id.isEmpty() || name.isEmpty() || pass.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error! Please ensure that all text fields are not empty.");
            return;
        }

        try {
            FileWriter file = new FileWriter("Lecturers.txt", true);
            BufferedWriter writer = new BufferedWriter(file);

            writer.write(id + ";" + name + ";" + pass + ";" + email + ";" + "\n");
            writer.close();
            JOptionPane.showMessageDialog(null, "New Lecturer user has successfully been added!");
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (roleval) {
            try {
                // get total row counts and use the counts to do auto incremental ID
                DataAbstract db = new DataAbstract("ProjectManagers.txt");
                int count = db.countLines();
                String pid = "PM" + count;
                FileWriter file = new FileWriter("ProjectManagers.txt", true);
                BufferedWriter writer = new BufferedWriter(file);
                // need pmid, lecid, pwd
                writer.write(pid + ";" + id + ";" + pass + "\n");
                writer.close();
                JOptionPane.showMessageDialog(null, "New Project Manager user has successfully been added!");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_AddBtnMouseClicked

    private void EditBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditBtnMouseClicked
        DefaultTableModel model = (DefaultTableModel) LecturerTable.getModel();
        if (LecturerTable.getSelectedRowCount() == 1) {
            String id = ID.getText();
            String name = Name.getText();
            String pass = String.valueOf(Password.getPassword());
            String email = Email.getText();

            model.setValueAt(id, LecturerTable.getSelectedRow(), 0);
            model.setValueAt(name, LecturerTable.getSelectedRow(), 1);
            model.setValueAt(pass, LecturerTable.getSelectedRow(), 2);
            model.setValueAt(email, LecturerTable.getSelectedRow(), 3);

            if(fDB.updateRow(LecturerTable.getSelectedRow(), new String[] {id, name, pass, email})){
                Save(model);
                JOptionPane.showMessageDialog(this, "Lecturer Details have been edited succesfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Error occured while editing the details.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select the row you wish to edit before typing.");
        }
    }//GEN-LAST:event_EditBtnMouseClicked

    private void DelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DelBtnMouseClicked
        DefaultTableModel model = (DefaultTableModel) LecturerTable.getModel();
        if (LecturerTable.getSelectedRowCount() == 1) {
            if(fDB.deleteRow(LecturerTable.getSelectedRow())){
                model.removeRow(LecturerTable.getSelectedRow());
                Save(model);
                JOptionPane.showMessageDialog(this, "Lecturer Details have been deleted succesfully!");
            } else{
                JOptionPane.showMessageDialog(this, "Error occured while deleting the details.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select the row you wish to delete.");
        }
    }//GEN-LAST:event_DelBtnMouseClicked

    private void SearchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseClicked
        DefaultTableModel model = (DefaultTableModel) LecturerTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        LecturerTable.setRowSorter(sorter);
        String search = SearchTxt.getText();
        sorter.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_SearchBtnMouseClicked

    private void ResetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResetBtnMouseClicked
        DefaultTableModel model = (DefaultTableModel) LecturerTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        LecturerTable.setRowSorter(sorter);
        String search = "";
        sorter.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_ResetBtnMouseClicked

    private void RefBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefBtnMouseClicked
        String filePath = "Lecturers.txt";
        File file = new File(filePath);

        try {
            BufferedReader buffer = new BufferedReader(new FileReader(file));
            DefaultTableModel model = (DefaultTableModel) LecturerTable.getModel();
            model.setRowCount(0);

            String line;
            while ((line = buffer.readLine()) != null) {
                String[] data = line.split(";");
                model.addRow(data);
            }
            buffer.close();
        } catch (IOException ex) {
            Logger.getLogger(ModLecturers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RefBtnMouseClicked

    private void SelectFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectFileMouseClicked
        JFileChooser fchooser = new JFileChooser();
        fchooser.showOpenDialog(null);
        File f = fchooser.getSelectedFile();
        String fname = f.getAbsolutePath();
        SelFilePath.setText(fname);
    }//GEN-LAST:event_SelectFileMouseClicked

    private void AddFileBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddFileBtnMouseClicked
        if(SelFilePath.getText() == null){
            javax.swing.JOptionPane.showMessageDialog(evt.getComponent(),"Select a file before adding in.");
            return; 
        }
        DataAbstract fRead = new DataAbstract(SelFilePath.getText());
        int counter = 0;
        int fcounter = 0;
        List<String[]> fReadRows = fRead.getAllRows();
        if(fReadRows.isEmpty()){
            javax.swing.JOptionPane.showMessageDialog(evt.getComponent(),"Please check you file and try again later.");
            return;
        }
        for(String[] row: fReadRows){
            if (!fDB.writeTo(row)) {
                javax.swing.JOptionPane.showMessageDialog(evt.getComponent(),"Error occured on line "+counter+", please check your input.");
                fcounter += 1;
            }
            counter += 1;
        }
        javax.swing.JOptionPane.showMessageDialog(evt.getComponent(),"Imported "+ (counter-fcounter) +" lines successfully.");
    }//GEN-LAST:event_AddFileBtnMouseClicked

    private void LecturerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LecturerTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) LecturerTable.getModel();
        if (LecturerTable.getSelectedRowCount()==1) {
            ID.setText(model.getValueAt(LecturerTable.getSelectedRow(),0).toString());
            Name.setText(model.getValueAt(LecturerTable.getSelectedRow(),1).toString());
            Password.setText(model.getValueAt(LecturerTable.getSelectedRow(),2).toString());
            Email.setText(model.getValueAt(LecturerTable.getSelectedRow(),3).toString());
        }
    }//GEN-LAST:event_LecturerTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModLecturers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModLecturers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModLecturers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModLecturers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModLecturers frame = new ModLecturers();
                frame.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                frame.setVisible(true);
            }
        });
    }

    private void Save(DefaultTableModel model) {
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("Lecturers.txt"));

            for (int row = 0; row < model.getRowCount(); row++) {
                for (int col = 0; col < model.getColumnCount(); col++) {
                    Object cellValue = model.getValueAt(row, col);
                    if (cellValue != null) {
                        String cellString = cellValue.toString();
                        writer.write(cellString);
                    }
                    if (col < model.getColumnCount() - 1) {
                        writer.write(";");
                    }
                }
                writer.newLine();
            }
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton AddFileBtn;
    private javax.swing.JButton DelBtn;
    private javax.swing.JButton EditBtn;
    private javax.swing.JTextField Email;
    private javax.swing.JButton HomeBtn;
    private javax.swing.JTextField ID;
    private javax.swing.JTable LecturerTable;
    private javax.swing.JTextField Name;
    private javax.swing.JCheckBox PMRole;
    private javax.swing.JPasswordField Password;
    private javax.swing.JButton RefBtn;
    private javax.swing.JButton ResetBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JTextField SelFilePath;
    private javax.swing.JButton SelectFile;
    private javax.swing.JLabel Title;
    private javax.swing.JTextField TopBG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
