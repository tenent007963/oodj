/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apu.y2s1.pms.student;

import apu.y2s1.pms.DataAbstract;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Random;
import java.util.Set;

/**
 *
 * @author User
 */
public class submitPage extends javax.swing.JFrame {

    DataAbstract studentID = new DataAbstract("Students.txt", ";");
    DataAbstract assessment = new DataAbstract("Assessments.txt", ";");
    DataAbstract submission = new DataAbstract("Submissions.txt", ";");
    Student currentStudent;

    /**
     * Creates new form submitPage
     */
    public submitPage() {
        currentStudent = (Student) Student.getInstance();
        initComponents();
        Table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void Table() {
        DefaultTableModel model = (DefaultTableModel) submitTable.getModel();
        model.setRowCount(0);
        String currentStudentTP = currentStudent.getUserID();
        List<String[]> allStudents = studentID.getAllRows();
        Set<String> uniqueAssessments = new HashSet<>();
        for (String[] rowData : allStudents) {
            String studentTP = rowData[0].trim();
            if (studentTP.equals(currentStudentTP)) {
                String assessmentType = rowData[5].trim();
                List<String[]> allAssessments = assessment.getAllRows();
                for (String[] aRow : allAssessments) {
                    if (aRow[2].trim().equals(assessmentType)) {
                        String assessmentID = aRow[0].trim();
                        String type = aRow[2].trim();
                        String handOutDate = aRow[6].trim();
                        String dueDate = aRow[7].trim();
                        String uniqueKey = assessmentID + "-" + type + "-" + handOutDate + "-" + dueDate;
                        if (!uniqueAssessments.contains(uniqueKey)) {
                            uniqueAssessments.add(uniqueKey);
                            model.addRow(new String[]{assessmentID, type, handOutDate, dueDate});
                        }
                    }
                }
            }
        }
    }

    /**/
    public class IDGenerator {

        private static final Random random = new Random();

        public String generateID() {
            int randomNumber = random.nextInt(900) + 100;
            return "S" + randomNumber;
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        assessmentText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BTsubmit = new javax.swing.JButton();
        BTedit = new javax.swing.JButton();
        BTdelete = new javax.swing.JButton();
        moodleText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        submitTable = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(720, 480));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(242, 242, 242));
        jLabel1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("REPORT SUBMISSION");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("HOME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 40));

        jTextField3.setBackground(new java.awt.Color(0, 102, 102));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 40));

        assessmentText.setEditable(false);
        assessmentText.setBackground(new java.awt.Color(242, 242, 242));
        getContentPane().add(assessmentText, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 230, -1));

        jLabel3.setText("Assessment ID:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        jLabel2.setText("Moodle Link:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, -1, -1));

        BTsubmit.setBackground(new java.awt.Color(102, 102, 102));
        BTsubmit.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        BTsubmit.setText("SUBMIT");
        BTsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTsubmitActionPerformed(evt);
            }
        });
        getContentPane().add(BTsubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, 380, 40));

        BTedit.setBackground(new java.awt.Color(102, 102, 102));
        BTedit.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        BTedit.setText("EDIT");
        BTedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTeditActionPerformed(evt);
            }
        });
        getContentPane().add(BTedit, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 190, 40));

        BTdelete.setBackground(new java.awt.Color(102, 102, 102));
        BTdelete.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        BTdelete.setText("DELETE");
        BTdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTdeleteActionPerformed(evt);
            }
        });
        getContentPane().add(BTdelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, 180, 40));

        moodleText.setBackground(new java.awt.Color(242, 242, 242));
        moodleText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moodleTextActionPerformed(evt);
            }
        });
        getContentPane().add(moodleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 230, -1));

        submitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Assessment ID", "Assessment Type", "Hand Out Date", "Due Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        submitTable.getTableHeader().setReorderingAllowed(false);
        submitTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(submitTable);
        if (submitTable.getColumnModel().getColumnCount() > 0) {
            submitTable.getColumnModel().getColumn(0).setResizable(false);
            submitTable.getColumnModel().getColumn(1).setResizable(false);
            submitTable.getColumnModel().getColumn(2).setResizable(false);
            submitTable.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 930, 430));

        jTextField1.setBackground(new java.awt.Color(0, 153, 153));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 930, 110));

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\OneDrive - Asia Pacific University\\Desktop\\Object Oriented Development with Java\\pexels-anna-tarazevich-5936283.jpg")); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void BTsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTsubmitActionPerformed
        int selectedRow = submitTable.getSelectedRow();
        String currentStudentTP = currentStudent.getUserID();
        IDGenerator generator = new IDGenerator();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date();
        String formattedDate = formatter.format(date);

        String ID = assessmentText.getText().trim();
        String verifyLink = moodleText.getText().toLowerCase();

        if (verifyLink.length() == 0) {
            JOptionPane.showMessageDialog(this, "The verification link cannot be empty.");
            return;
        }
        if (!verifyLink.startsWith("https://") || !verifyLink.contains("lms2.apiit.edu.my")) {
            JOptionPane.showMessageDialog(this, "The entered text should contain lms2.apiit.edu.my and start with https://");
            return;
        }

        try {
            Path filePath = Paths.get("Submissions.txt");
            List<String> lines = Files.readAllLines(filePath, StandardCharsets.UTF_8);
            boolean duplicateFound = false;
            for (String line : lines) {
                String[] parts = line.split(";");
                if (parts.length > 13 && parts[13].equals(verifyLink)) {
                    duplicateFound = true;
                    JOptionPane.showMessageDialog(this, "Assessment cannot be submitted twice.");
                    break;
                }
            }
            if (!duplicateFound) {
                String newID = generator.generateID();
                String[] newData = {newID, currentStudentTP, ID, formattedDate, "-", "-", "-", "-", "-", "-", "-", "-", "-", verifyLink};
                if (submission.writeTo(newData)) {
                    JOptionPane.showMessageDialog(this, "New submission added successfully.");
                    assessmentText.setText("");
                    moodleText.setText("");
                    Table();
                } else {
                    JOptionPane.showMessageDialog(null, "An error occurred while writing to file.");
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_BTsubmitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        studentPage home = new studentPage();
        home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BTeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTeditActionPerformed
        int selectedRow = submitTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to edit report details.");
            return;
        }
        String ID = assessmentText.getText().trim();
        String verifyLink = moodleText.getText().toLowerCase();
        if ((!verifyLink.startsWith("https://") || !verifyLink.contains("lms2.apiit.edu.my")) && verifyLink.length() > 0) {
            JOptionPane.showMessageDialog(this, "The entered text should contain lms2.apiit.edu.my and starts with https://");
            return;
        } else {
            try {
                List<String> lines = Files.readAllLines(Paths.get("Submissions.txt"), StandardCharsets.UTF_8);
                boolean updated = false;
                for (int i = 0; i < lines.size(); i++) {
                    String[] parts = lines.get(i).split(";");
                    if (parts[2].equals(ID)) {
                        parts[13] = verifyLink;
                        lines.set(i, String.join(";", parts));
                        updated = true;
                        break;
                    }
                }
                if (updated) {
                    Files.write(Paths.get("Submissions.txt"), lines, StandardCharsets.UTF_8);
                    JOptionPane.showMessageDialog(this, "Submission details updated successfully.");
                    assessmentText.setText("");
                    moodleText.setText("");
                    Table();
                } else {
                    JOptionPane.showMessageDialog(this, "An error occurred while updating data.");
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_BTeditActionPerformed

    private void moodleTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moodleTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moodleTextActionPerformed

    private void submitTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitTableMouseClicked
        int selectedRow = submitTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to submit report.");
            return;
        }

        String selectedAssessment = (String) submitTable.getValueAt(selectedRow, 0);
        assessmentText.setText(selectedAssessment);
        moodleText.setText("");

        try {
            List<String> lines = Files.readAllLines(Paths.get("Submissions.txt"), StandardCharsets.UTF_8);
            for (String line : lines) {
                String[] parts = line.split(";");
                if (parts.length >= 14 && parts[2].trim().equals(assessmentText.getText().trim())) {
                    String link = parts[13].trim();
                    moodleText.setText(link);
                    break;
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_submitTableMouseClicked
  

    private void BTdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTdeleteActionPerformed
        int selectedRow = submitTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete report details.");
            return;
        }
        String ID = assessmentText.getText().trim();
        String verifyLink = moodleText.getText().toLowerCase();
        try {
            List<String> lines = Files.readAllLines(Paths.get("Submissions.txt"), StandardCharsets.UTF_8);
            boolean updated = false;
            for (int i = 0; i < lines.size(); i++) {
                String[] parts = lines.get(i).split(";");
                if (parts[2].equals(ID)) {
                    parts[13] = "-";
                    lines.set(i, String.join(";", parts));
                    updated = true;
                    break;
                }
            }
            if (updated) {
                Files.write(Paths.get("Submissions.txt"), lines, StandardCharsets.UTF_8);
                JOptionPane.showMessageDialog(this, "Submission details deleted successfully.");
                assessmentText.setText("");
                moodleText.setText("");
                Table();
            } else {
                JOptionPane.showMessageDialog(this, "An error occurred while updating data.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_BTdeleteActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(submitPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(submitPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(submitPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(submitPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new submitPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTdelete;
    private javax.swing.JButton BTedit;
    private javax.swing.JButton BTsubmit;
    private javax.swing.JTextField assessmentText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField moodleText;
    private javax.swing.JTable submitTable;
    // End of variables declaration//GEN-END:variables
}
